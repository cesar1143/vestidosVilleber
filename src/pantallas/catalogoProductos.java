/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import NuevasPantallas.principal;
import beans.Productos;
import control.controlProductos;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import mensajes.cargando;
import mensajes.mensajeAdvertencia;
import modelo.daoProductos;
import static pantallas.DetallesProducto.labelFoto;

/**
 *
 * @author famsa
 */
public class catalogoProductos extends javax.swing.JFrame {

    controlProductos controlPro = new controlProductos();
    //contador para  sacar  las fotos de los productos
    int contadorImgenes = 12;
    int valori = 0;
    int contadorLabel = 0;
//la lista global
    List<Productos> listaPro = new ArrayList<Productos>();

    /**
     * Creates new form catalogoProductos
     */
    public catalogoProductos() {
        initComponents();
        principal.framecatalogo = this;
        foto2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto2.setToolTipText("Click para ver detalles  del producto");
        foto3.setToolTipText("Click para ver detalles  del producto");
        foto4.setToolTipText("Click para ver detalles  del producto");
        foto5.setToolTipText("Click para ver detalles  del producto");
        foto6.setToolTipText("Click para ver detalles  del producto");
        foto7.setToolTipText("Click para ver detalles  del producto");
        foto8.setToolTipText("Click para ver detalles  del producto");
        foto9.setToolTipText("Click para ver detalles  del producto");
        foto10.setToolTipText("Click para ver detalles  del producto");
        foto11.setToolTipText("Click para ver detalles  del producto");
        foto12.setToolTipText("Click para ver detalles  del producto");

        //ocultamos los label id
        id1.setVisible(false);
        id2.setVisible(false);
        id3.setVisible(false);
        id4.setVisible(false);
        id5.setVisible(false);
        id6.setVisible(false);
        id7.setVisible(false);
        id8.setVisible(false);
        id9.setVisible(false);
        id10.setVisible(false);
        id11.setVisible(false);
        id12.setVisible(false);
        atras.setVisible(false);
        next.setVisible(false);
        //metodo para pintar imagenes
        pintarImagenes(controlPro.consultarTodos2019());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        foto1 = new javax.swing.JLabel();
        foto3 = new javax.swing.JLabel();
        foto2 = new javax.swing.JLabel();
        foto4 = new javax.swing.JLabel();
        foto5 = new javax.swing.JLabel();
        foto6 = new javax.swing.JLabel();
        foto7 = new javax.swing.JLabel();
        foto8 = new javax.swing.JLabel();
        foto9 = new javax.swing.JLabel();
        foto10 = new javax.swing.JLabel();
        foto11 = new javax.swing.JLabel();
        foto12 = new javax.swing.JLabel();
        id1 = new javax.swing.JLabel();
        id5 = new javax.swing.JLabel();
        id9 = new javax.swing.JLabel();
        id2 = new javax.swing.JLabel();
        id6 = new javax.swing.JLabel();
        id10 = new javax.swing.JLabel();
        id12 = new javax.swing.JLabel();
        id8 = new javax.swing.JLabel();
        id4 = new javax.swing.JLabel();
        id3 = new javax.swing.JLabel();
        id7 = new javax.swing.JLabel();
        id11 = new javax.swing.JLabel();
        atras = new javax.swing.JLabel();
        next = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panel.setBackground(new java.awt.Color(255, 255, 255));

        foto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto1.setToolTipText("Click y muestra detalles  del producto");
        foto1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        foto1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto1MouseExited(evt);
            }
        });

        foto3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto3MouseExited(evt);
            }
        });

        foto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto2MouseExited(evt);
            }
        });

        foto4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto4MouseExited(evt);
            }
        });

        foto5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto5MouseExited(evt);
            }
        });

        foto6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto6MouseExited(evt);
            }
        });

        foto7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto7MouseExited(evt);
            }
        });

        foto8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto8MouseExited(evt);
            }
        });

        foto9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto9MouseExited(evt);
            }
        });

        foto10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto10MouseExited(evt);
            }
        });

        foto11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto11MouseExited(evt);
            }
        });

        foto12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foto12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        foto12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foto12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                foto12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                foto12MouseExited(evt);
            }
        });

        id1.setText("jLabel1");

        id5.setText("jLabel1");

        id9.setText("jLabel1");

        id2.setText("jLabel1");

        id6.setText("jLabel1");

        id10.setText("jLabel1");

        id12.setText("jLabel1");

        id8.setText("jLabel1");

        id4.setText("jLabel1");

        id3.setText("jLabel1");

        id7.setText("jLabel1");

        id11.setText("jLabel1");

        atras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/atras.png"))); // NOI18N
        atras.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        atras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atrasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                atrasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                atrasMouseExited(evt);
            }
        });

        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/nextt.png"))); // NOI18N
        next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextMouseExited(evt);
            }
        });
        next.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nextKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 204));
        jLabel1.setText("Buscar por Nombre:");
        jLabel1.setToolTipText("Refrescar las imagenes");

        txtNombre.setToolTipText("Refrescar las imagenes");
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/actualizarTabla.png"))); // NOI18N
        jLabel2.setToolTipText("Refrescar las imagenes");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(id1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(id8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(id10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(9, 9, 9)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(foto7, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto8, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto9, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto10, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto11, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto12, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(foto1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(foto6, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(atras)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(next)))))
                .addContainerGap(273, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(id1)
                        .addComponent(id2))
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(id3)
                        .addComponent(id4))
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(id10)
                        .addComponent(id11)
                        .addComponent(id12)
                        .addComponent(id9)
                        .addComponent(id8)
                        .addComponent(jLabel1)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(id6)
                        .addComponent(id7)
                        .addComponent(id5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(atras)
                    .addComponent(next))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(foto6, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto5, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto4, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto3, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(foto12, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto11, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto10, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto8, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto9, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foto7, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(103, 103, 103))
        );

        next.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseClicked
        if (listaPro.size() > 0) {
            atras.setVisible(true);
            valori = contadorImgenes;
            contadorImgenes += 12;
            contadorLabel = 0;
            pintarImagenesYaCargadas();
        } else {

        }

    }//GEN-LAST:event_nextMouseClicked

    private void nextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nextKeyPressed

    }//GEN-LAST:event_nextKeyPressed

    private void atrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atrasMouseClicked

        if (listaPro.size() > 0) {
            atras.setVisible(true);
            valori = contadorImgenes - (12 * 2);
            contadorImgenes -= 12;
            contadorLabel = 0;
            if (valori <= 0) {
                atras.setVisible(false);
            } else {

            }
            pintarImagenesYaCargadas();
        } else {

        }
    }//GEN-LAST:event_atrasMouseClicked

    private void foto1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto1MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto1.getIcon() != null) {
                String id = id1.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }

    }//GEN-LAST:event_foto1MouseClicked

    private void foto2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto2MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto2.getIcon() != null) {
                String id = id2.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto2MouseClicked

    private void foto3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto3MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto3.getIcon() != null) {
                String id = id3.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto3MouseClicked

    private void foto4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto4MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto4.getIcon() != null) {
                String id = id4.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto4MouseClicked

    private void foto5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto5MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto5.getIcon() != null) {
                String id = id5.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto5MouseClicked

    private void foto6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto6MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto6.getIcon() != null) {
                String id = id6.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto6MouseClicked

    private void foto7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto7MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto7.getIcon() != null) {
                String id = id7.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto7MouseClicked

    private void foto8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto8MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto8.getIcon() != null) {
                String id = id8.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto8MouseClicked

    private void foto9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto9MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto9.getIcon() != null) {
                String id = id9.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto9MouseClicked

    private void foto10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto10MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto10.getIcon() != null) {
                String id = id10.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto10MouseClicked

    private void foto11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto11MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto11.getIcon() != null) {
                String id = id11.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto11MouseClicked

    private void foto12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto12MouseClicked
        if (principal.controlDetallesProducto == false) {
            if (foto12.getIcon() != null) {
                String id = id12.getText();
                DetallesProducto.idProducto = id;
                DetallesProducto d = new DetallesProducto();
                d.setVisible(true);
                principal.controlDetallesProducto = true;
            } else {

            }

        } else {
            principal.frameDetallesProducto.setAlwaysOnTop(true);
            principal.frameDetallesProducto.setAlwaysOnTop(false);
            mensajeAdvertencia m = new mensajeAdvertencia();
            mensajeAdvertencia.labelMensaje.setText("La ventana ya esta abierta");
            m.setVisible(true);
            m.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_foto12MouseClicked

    private void foto1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto1MouseEntered
        foto1.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto1MouseEntered

    private void foto1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto1MouseExited
        foto1.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto1MouseExited

    private void foto2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto2MouseEntered
        foto2.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto2MouseEntered

    private void foto2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto2MouseExited
        foto2.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto2MouseExited

    private void foto3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto3MouseEntered
        foto3.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto3MouseEntered

    private void foto3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto3MouseExited
        foto3.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto3MouseExited

    private void foto4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto4MouseEntered
        foto4.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto4MouseEntered

    private void foto5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto5MouseEntered
        foto5.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto5MouseEntered

    private void foto4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto4MouseExited
        foto4.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto4MouseExited

    private void foto5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto5MouseExited
        foto5.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto5MouseExited

    private void foto6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto6MouseEntered
        foto6.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto6MouseEntered

    private void foto6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto6MouseExited
        foto6.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto6MouseExited

    private void foto7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto7MouseEntered
        foto7.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto7MouseEntered

    private void foto7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto7MouseExited
        foto7.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto7MouseExited

    private void foto8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto8MouseEntered
        foto8.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto8MouseEntered

    private void foto8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto8MouseExited
        foto8.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto8MouseExited

    private void foto9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto9MouseEntered
        foto9.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto9MouseEntered

    private void foto9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto9MouseExited
        foto9.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto9MouseExited

    private void foto10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto10MouseEntered
        foto10.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto10MouseEntered

    private void foto10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto10MouseExited
        foto10.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto10MouseExited

    private void foto11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto11MouseEntered
        foto11.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto11MouseEntered

    private void foto11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto11MouseExited
        foto11.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto11MouseExited

    private void foto12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto12MouseEntered
        foto12.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_foto12MouseEntered

    private void foto12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foto12MouseExited
        foto12.setBorder(BorderFactory.createLineBorder(Color.BLACK));
    }//GEN-LAST:event_foto12MouseExited

    private void atrasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atrasMouseEntered
        foto12.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_atrasMouseEntered

    private void atrasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atrasMouseExited
        foto12.setBorder(BorderFactory.createLineBorder(Color.WHITE));
    }//GEN-LAST:event_atrasMouseExited

    private void nextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseEntered
        foto12.setBorder(BorderFactory.createLineBorder(Color.PINK));
    }//GEN-LAST:event_nextMouseEntered

    private void nextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseExited
        foto12.setBorder(BorderFactory.createLineBorder(Color.WHITE));

    }//GEN-LAST:event_nextMouseExited

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        txtNombre.setEnabled(false);
        txtNombre.setBackground(Color.GRAY);
        List<Productos> lista = new daoProductos().consultaTodosPorNombre2019(txtNombre.getText());

        listaPro.clear();
        contadorImgenes = 12;
        valori = 0;
        contadorLabel = 0;
        pintarImagenes(lista);
        txtNombre.setEnabled(true);
        txtNombre.setBackground(Color.WHITE);

    }//GEN-LAST:event_txtNombreKeyReleased

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        listaPro.clear();
        txtNombre.setText("");
        pintarImagenes(controlPro.consultarTodos2019());
        contadorImgenes = 12;
        valori = 0;
        contadorLabel = 0;

    }//GEN-LAST:event_jLabel2MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        principal.controlcatalogo = false;
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(catalogoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(catalogoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(catalogoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(catalogoProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new catalogoProductos().setVisible(true);
            }
        });
    }

    public void pintarImagenes(List<Productos> lista) {

        if (lista.size() == 0) {
            JOptionPane.showMessageDialog(null, "No existe ningun producto");
            foto1.setIcon(null);
            foto2.setIcon(null);
            foto3.setIcon(null);
            foto4.setIcon(null);
            foto5.setIcon(null);
            foto6.setIcon(null);
            foto7.setIcon(null);
            foto8.setIcon(null);
            foto9.setIcon(null);
            foto10.setIcon(null);
            foto11.setIcon(null);

            foto12.setIcon(null);
            foto1.setText("Sin foto");
            foto2.setText("Sin foto");
            foto3.setText("Sin foto");
            foto4.setText("Sin foto");
            foto5.setText("Sin foto");
            foto6.setText("Sin foto");
            foto7.setText("Sin foto");
            foto8.setText("Sin foto");
            foto9.setText("Sin foto");
            foto10.setText("Sin foto");
            foto11.setText("Sin foto");
            foto12.setText("Sin foto");
        } else {

            Thread hilo = new Thread() {

                @Override
                public void run() {
                    cargando c = new cargando();
                    c.setVisible(true);
                    c.setAlwaysOnTop(true);
                    //creamos la lista de label fotos y de id
                    List<JLabel> listaFotos = new ArrayList<JLabel>();
                    //llenamos la listaFotos
                    listaFotos.add(foto1);
                    listaFotos.add(foto2);
                    listaFotos.add(foto3);
                    listaFotos.add(foto4);
                    listaFotos.add(foto5);
                    listaFotos.add(foto6);
                    listaFotos.add(foto7);
                    listaFotos.add(foto8);
                    listaFotos.add(foto9);
                    listaFotos.add(foto10);
                    listaFotos.add(foto11);
                    listaFotos.add(foto12);

                    List<JLabel> listaId = new ArrayList<JLabel>();
                    //llenamos lista  id
                    listaId.add(id1);
                    listaId.add(id2);
                    listaId.add(id3);
                    listaId.add(id4);
                    listaId.add(id5);
                    listaId.add(id6);
                    listaId.add(id7);
                    listaId.add(id8);
                    listaId.add(id9);
                    listaId.add(id10);
                    listaId.add(id11);
                    listaId.add(id12);

                    // listaPro = controlPro.consultarTodos2019();
                    listaPro = lista;

                    if (listaPro.size() == 0) {
                        JOptionPane.showMessageDialog(null, "No existe ningun producto");
                        foto1.setIcon(null);
                        foto2.setIcon(null);
                        foto3.setIcon(null);
                        foto4.setIcon(null);
                        foto5.setIcon(null);
                        foto6.setIcon(null);
                        foto7.setIcon(null);
                        foto8.setIcon(null);
                        foto9.setIcon(null);
                        foto10.setIcon(null);
                        foto11.setIcon(null);

                        foto12.setIcon(null);
                        foto1.setText("Sin foto");
                        foto2.setText("Sin foto");
                        foto3.setText("Sin foto");
                        foto4.setText("Sin foto");
                        foto5.setText("Sin foto");
                        foto6.setText("Sin foto");
                        foto7.setText("Sin foto");
                        foto8.setText("Sin foto");
                        foto9.setText("Sin foto");
                        foto10.setText("Sin foto");
                        foto11.setText("Sin foto");
                        foto12.setText("Sin foto");
                        c.dispose();
                    } else {
                        //activamos el boton next si la lista  es  mayor al contador
                        if (listaPro.size() > contadorImgenes) {
                            next.setVisible(true);
                        } else {
                            next.setVisible(false);
                        }

                        for (valori = 0; valori < contadorImgenes; valori++) {

                            if (valori == listaPro.size()) {

                                for (int i = valori; i < 12; i++) {

                                    listaFotos.get(i).setIcon(null);
                                    listaFotos.get(i).setText("Sin  foto");
                                }

                                break;

                            } else {
                                if (valori > listaFotos.size()) {
                                    break;
                                } else {
                                    Productos bean = listaPro.get(valori);
                                    if (bean.getFoto() == null) {
                                        listaFotos.get(valori).setIcon(null);
                                        listaFotos.get(valori).setText("Sin foto");
                                    } else {
                                        //si no trae foto  ponemos sin foto 

                                        listaFotos.get(valori).setText("");
                                        try {
                                            Image imagen = imagen = new daoProductos().getImg(listaPro.get(valori).getFoto(), false);

                                            Icon icon = new ImageIcon(imagen.getScaledInstance(205, 317, Image.SCALE_DEFAULT));
                                            listaFotos.get(valori).setIcon(icon);
                                            listaId.get(valori).setText(listaPro.get(valori).getIdproductos() + "");
                                        } catch (Exception e) {
                                            c.dispose();
                                            System.out.println("Error al cargar solo imagen " + e.getMessage());
                                        }

                                    }
                                }
                            }

                        }
                        c.dispose();

                    }
                }

            };
            hilo.start();
        }

    }

    public void pintarImagenesYaCargadas() {

        Thread hilo = new Thread() {
            @Override
            public void run() {
                cargando c = new cargando();
                c.setVisible(true);
                c.setAlwaysOnTop(true);
                //creamos la lista de label fotos y de id
                List<JLabel> listaFotos = new ArrayList<JLabel>();
                //llenamos la listaFotos
                listaFotos.add(foto1);
                listaFotos.add(foto2);
                listaFotos.add(foto3);
                listaFotos.add(foto4);
                listaFotos.add(foto5);
                listaFotos.add(foto6);
                listaFotos.add(foto7);
                listaFotos.add(foto8);
                listaFotos.add(foto9);
                listaFotos.add(foto10);
                listaFotos.add(foto11);
                listaFotos.add(foto12);

                List<JLabel> listaId = new ArrayList<JLabel>();
                //llenamos lista  id
                listaId.add(id1);
                listaId.add(id2);
                listaId.add(id3);
                listaId.add(id4);
                listaId.add(id5);
                listaId.add(id6);
                listaId.add(id7);
                listaId.add(id8);
                listaId.add(id9);
                listaId.add(id10);
                listaId.add(id11);
                listaId.add(id12);

                //listaPro = controlPro.consultarTodos2019();
                if (listaPro.size() == 0) {
                    JOptionPane.showMessageDialog(null, "No existe ningun producto");
                    foto1.setIcon(null);
                    foto2.setIcon(null);
                    foto3.setIcon(null);
                    foto4.setIcon(null);
                    foto5.setIcon(null);
                    foto6.setIcon(null);
                    foto7.setIcon(null);
                    foto8.setIcon(null);
                    foto9.setIcon(null);
                    foto10.setIcon(null);
                    foto11.setIcon(null);

                    foto12.setIcon(null);
                    foto1.setText("Sin foto");
                    foto2.setText("Sin foto");
                    foto3.setText("Sin foto");
                    foto4.setText("Sin foto");
                    foto5.setText("Sin foto");
                    foto6.setText("Sin foto");
                    foto7.setText("Sin foto");
                    foto8.setText("Sin foto");
                    foto9.setText("Sin foto");
                    foto10.setText("Sin foto");
                    foto11.setText("Sin foto");
                    foto12.setText("Sin foto");
                    c.dispose();
                } else {
                    //activamos el boton next si la lista  es  mayor al contador
                    if (listaPro.size() > contadorImgenes) {
                        next.setVisible(true);

                    } else {
                        next.setVisible(false);
                    }

                    for (; valori < contadorImgenes; valori++) {
//esto es para ver  si ya  llenamos  todos los label foto
                        if (contadorLabel > listaFotos.size()) {

                            break;
                        } else {
                            if (valori == listaPro.size()) {

                                for (int i = contadorLabel; i < 12; i++) {
                                    listaFotos.get(i).setIcon(null);
                                    listaFotos.get(i).setText("Sin  foto");
                                }

                                break;

                            } else {
                                Productos bean = listaPro.get(valori);

                                if (bean.getFoto() == null) {
                                    listaFotos.get(contadorLabel).setIcon(null);
                                    listaFotos.get(contadorLabel).setText("Sin foto");
                                } else {
                                    //si no trae foto  ponemos sin foto 

                                    listaFotos.get(contadorLabel).setText("");
                                    try {
                                        Image imagen = imagen = new daoProductos().getImg(listaPro.get(valori).getFoto(), false);

                                        Icon icon = new ImageIcon(imagen.getScaledInstance(205, 317, Image.SCALE_DEFAULT));
                                        listaFotos.get(contadorLabel).setIcon(icon);
                                        listaId.get(contadorLabel).setText(listaPro.get(valori).getIdproductos() + "");
                                    } catch (Exception e) {
                                        c.dispose();
                                        System.out.println("Error al cargar solo imagen " + e.getMessage());
                                    }

                                }

                                contadorLabel++;
                            }

                        }

                    }

                    c.dispose();

                }
            }

        };
        hilo.start();

        if (valori < listaPro.size()) {
            next.setVisible(true);
        } else {
            next.setVisible(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel atras;
    private javax.swing.JLabel foto1;
    private javax.swing.JLabel foto10;
    private javax.swing.JLabel foto11;
    private javax.swing.JLabel foto12;
    private javax.swing.JLabel foto2;
    private javax.swing.JLabel foto3;
    private javax.swing.JLabel foto4;
    private javax.swing.JLabel foto5;
    private javax.swing.JLabel foto6;
    private javax.swing.JLabel foto7;
    private javax.swing.JLabel foto8;
    private javax.swing.JLabel foto9;
    private javax.swing.JLabel id1;
    private javax.swing.JLabel id10;
    private javax.swing.JLabel id11;
    private javax.swing.JLabel id12;
    private javax.swing.JLabel id2;
    private javax.swing.JLabel id3;
    private javax.swing.JLabel id4;
    private javax.swing.JLabel id5;
    private javax.swing.JLabel id6;
    private javax.swing.JLabel id7;
    private javax.swing.JLabel id8;
    private javax.swing.JLabel id9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel next;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    public void metodosBotones(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            if (principal.controlDetallesProducto == false) {

            } else {
                principal.controlDetallesProducto = false;
                principal.frameDetallesProducto.dispose();
            }
            principal.controlcatalogo = false;
            dispose();
        } else {
        }
    }
}
